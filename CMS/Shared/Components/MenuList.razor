
@inject MenuODataService MenuODataService

<RadzenSidebar @bind-Expanded="@sidebar1Expanded">
    <RadzenPanelMenu>
        @if (menuItems != null && menuItems.Count() > 0)
        {
            @foreach (var menuItem in menuItems.Where(f => f.ParentMenuId == null).OrderBy(o => o.Priority).ToList())
            {
                <RadzenPanelMenuItem Text="@($"{menuItem.Code} {menuItem.Title}")" Icon="@menuItem.Icon" Path="@menuItem.Path">

                    @if (menuItems.Any(e => e.ParentMenuId == menuItem.Id))
                    {
                        @foreach (var childMenuItem in menuItems.Where(f => f.ParentMenuId == menuItem.Id).OrderBy(o => o.Priority).ToList())
                        {
                            <RadzenPanelMenuItem Text="@($"{childMenuItem.Code} {childMenuItem.Title}")" Icon="@childMenuItem.Icon" Path="@childMenuItem.Path"></RadzenPanelMenuItem>
                        }
                    }

                </RadzenPanelMenuItem>
            }
        }
    </RadzenPanelMenu>
</RadzenSidebar>

@code {
    bool sidebar1Expanded = true;
    IEnumerable<Menu> menuItems;

    protected async override Task OnInitializedAsync()
    {
        var result = await MenuODataService.GetListAsync(new ODataRequestParams
        {
            Expand = "ParentMenu"
        });

        menuItems = result.AsODataEnumerable();
    }
}

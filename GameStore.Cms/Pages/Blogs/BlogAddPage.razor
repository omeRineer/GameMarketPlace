@page "/blogadd"

@inherits BasePage
@inject BlogService BlogService

<div class="row mb-2">
        <div class="col-md-2 align-items-center d-flex">
            <RadzenLabel Text="Başlık:" />
        </div>
        <div class="col-md-4">
            <RadzenTextBox class="w-100" @bind-Value="newBlog.Header" />
        </div>

        <div class="col-md-2 align-items-center d-flex">
            <RadzenLabel Text="Yayın Durumu:" />
        </div>
        <div class="col-md-4">
            <RadzenCheckBox @bind-Value="newBlog.Status" />
        </div>
    </div>

<div class="row mb-2">
    <div class="col-md-2 align-items-center d-flex">
        <RadzenLabel Text="Kapak Fotoğrafı:" />
    </div>
    <div class="col-md-4">
        <BaseFileInput TModel="BaseModel.InputFile"
                       FileType="image/*"
                       IsMultiple="false"
                       ChooseText="Kapak Resmi Seçin"
                       MaxFileCount="1"
                       @bind-Model="newBlog.Cover" />
    </div>
</div>

<div class="row">
        <div class="col-md-2 align-items-center d-flex">
            <RadzenLabel Text="İçerik:" />
        </div>
        <div class="col-md-10">
            <RadzenHtmlEditor @bind-Value="newBlog.Content" style="height: 300px;" />
        </div>
    </div>

<div class="row mt-3">
    <div class="col-md-12">
        <RadzenButton Click="@Save" Text="Kaydet" Style="margin-bottom: 10px; width: 150px" Visible="@(IsLoading == false)" />
        <RadzenButton Click="@((args) => DialogService.Close(false))" ButtonStyle="ButtonStyle.Secondary" Text="İptal" Style="margin-bottom: 10px; width: 150px" />
    </div>
</div>

@code {
    CreateBlogModel newBlog = new CreateBlogModel();

    private async Task Save()
    {
        IsLoading = true;

        if (newBlog.Header == null)
        {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Lütfen Başlık Giriniz" });
            return;
        }
        var result = await BlogService.CreateAsync(newBlog);

        if (!result.IsSuccessStatusCode)
        {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = result.StatusCode.ToString() });
            IsLoading = false;
            return;
        }

        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = result.StatusCode.ToString() });

        DialogService.Close(true);
        IsLoading = false;
    }
}

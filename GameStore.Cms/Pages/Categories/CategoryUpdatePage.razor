@page "/categoryupdate"

@inherits BasePage

@inject CategoryService CategoryService
@inject CategoryODataService CategoryODataService

<EditForm Model="Category" OnValidSubmit="Save">
    <DataAnnotationsValidator />

    <div class="row">
        <div class="col-md-4 align-items-center d-flex">
            <RadzenLabel Text="Kategori Adı:" />
        </div>
        <div class="col-md-8">
            <RadzenTextBox @bind-Value="Category.Name" />
            <ValidationMessage For="() => Category.Name" />
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-md-12">
            <RadzenButton ButtonType="ButtonType.Submit" Text="Kaydet" Style="margin-bottom: 10px; width: 150px" Visible="@(IsLoading == false)" />
            <RadzenButton Click="@((args) => DialogService.Close(false))" ButtonStyle="ButtonStyle.Secondary" Text="İptal" Style="margin-bottom: 10px; width: 150px" />
        </div>
    </div>
</EditForm>

@code {
    [Parameter] public object CategoryId { get; set; }
    SingleCategoryModel? Category;
    UpdateCategoryModel UpdateModel;

    protected override void OnInitialized()
    {
        var result = CategoryService.GetAsync((Guid)CategoryId);

        if (result == null)
        {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Kategori bulunamadı!" });
            return;
        }

        Category = result.Result.Data;
    }


    private async Task Save()
    {
        IsLoading = true;

        var model = Mapper.Map<UpdateCategoryModel>(Category);
        var result = await CategoryService.UpdateAsync(model);

        if (!result.IsSuccessful)
        {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = result.StatusCode.ToString() });
            IsLoading = false;
            return;
        }

        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = result.StatusCode.ToString() });

        DialogService.Close(true);
        IsLoading = false;
    }
}
